[{"X:\\DevConnector\\client\\src\\index.js":"1","X:\\DevConnector\\client\\src\\App.js":"2","X:\\DevConnector\\client\\src\\store.js":"3","X:\\DevConnector\\client\\src\\components\\auth\\Register.js":"4","X:\\DevConnector\\client\\src\\components\\layout\\Landing.js":"5","X:\\DevConnector\\client\\src\\components\\layout\\Navbar.js":"6","X:\\DevConnector\\client\\src\\components\\auth\\Login.js":"7","X:\\DevConnector\\client\\src\\reducers\\index.js":"8","X:\\DevConnector\\client\\src\\reducers\\alert.js":"9","X:\\DevConnector\\client\\src\\actions\\types.js":"10","X:\\DevConnector\\client\\src\\actions\\alert.js":"11","X:\\DevConnector\\client\\src\\components\\layout\\Alert.js":"12","X:\\DevConnector\\client\\src\\reducers\\auth.js":"13","X:\\DevConnector\\client\\src\\actions\\auth.js":"14","X:\\DevConnector\\client\\src\\utils\\setAuthToken.js":"15","X:\\DevConnector\\client\\src\\components\\dashboard\\Dashboard.js":"16","X:\\DevConnector\\client\\src\\components\\routing\\PrivateRoute.js":"17","X:\\DevConnector\\client\\src\\reducers\\profile.js":"18","X:\\DevConnector\\client\\src\\actions\\profile.js":"19","X:\\DevConnector\\client\\src\\components\\layout\\Spinner.js":"20","X:\\DevConnector\\client\\src\\components\\profile-forms\\CreateProfile.js":"21","X:\\DevConnector\\client\\src\\components\\dashboard\\DashboardActions.js":"22","X:\\DevConnector\\client\\src\\components\\profile-forms\\EditProfile.js":"23","X:\\DevConnector\\client\\src\\components\\profile-forms\\AddExperience.js":"24","X:\\DevConnector\\client\\src\\components\\profile-forms\\AddEducation.js":"25","X:\\DevConnector\\client\\src\\components\\dashboard\\Experience.js":"26","X:\\DevConnector\\client\\src\\components\\dashboard\\Education.js":"27","X:\\DevConnector\\client\\src\\components\\profiles\\Profiles.js":"28","X:\\DevConnector\\client\\src\\components\\profiles\\ProfileItem.js":"29"},{"size":198,"mtime":1602317075068,"results":"30","hashOfConfig":"31"},{"size":2133,"mtime":1609254829964,"results":"32","hashOfConfig":"31"},{"size":385,"mtime":1602659846385,"results":"33","hashOfConfig":"31"},{"size":2694,"mtime":1607926715465,"results":"34","hashOfConfig":"31"},{"size":1091,"mtime":1608381722520,"results":"35","hashOfConfig":"31"},{"size":1410,"mtime":1609255090936,"results":"36","hashOfConfig":"31"},{"size":1879,"mtime":1607926467991,"results":"37","hashOfConfig":"31"},{"size":197,"mtime":1607973951539,"results":"38","hashOfConfig":"31"},{"size":389,"mtime":1606810707722,"results":"39","hashOfConfig":"31"},{"size":708,"mtime":1609253681589,"results":"40","hashOfConfig":"31"},{"size":352,"mtime":1607286338457,"results":"41","hashOfConfig":"31"},{"size":482,"mtime":1607285844426,"results":"42","hashOfConfig":"31"},{"size":1116,"mtime":1609243660163,"results":"43","hashOfConfig":"31"},{"size":2082,"mtime":1608490857381,"results":"44","hashOfConfig":"31"},{"size":249,"mtime":1607418116159,"results":"45","hashOfConfig":"31"},{"size":1907,"mtime":1609252510721,"results":"46","hashOfConfig":"31"},{"size":584,"mtime":1607973616542,"results":"47","hashOfConfig":"31"},{"size":1049,"mtime":1609335711805,"results":"48","hashOfConfig":"31"},{"size":5641,"mtime":1609253684480,"results":"49","hashOfConfig":"31"},{"size":267,"mtime":1608489362805,"results":"50","hashOfConfig":"31"},{"size":6002,"mtime":1608743249099,"results":"51","hashOfConfig":"31"},{"size":658,"mtime":1608735995478,"results":"52","hashOfConfig":"31"},{"size":7238,"mtime":1608743168593,"results":"53","hashOfConfig":"31"},{"size":2928,"mtime":1608747315723,"results":"54","hashOfConfig":"31"},{"size":2933,"mtime":1609240977654,"results":"55","hashOfConfig":"31"},{"size":1308,"mtime":1609250752905,"results":"56","hashOfConfig":"31"},{"size":1294,"mtime":1609251009107,"results":"57","hashOfConfig":"31"},{"size":1226,"mtime":1609336153229,"results":"58","hashOfConfig":"31"},{"size":995,"mtime":1609337092344,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1stkfyt",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"X:\\DevConnector\\client\\src\\index.js",[],["125","126"],"X:\\DevConnector\\client\\src\\App.js",[],"X:\\DevConnector\\client\\src\\store.js",[],"X:\\DevConnector\\client\\src\\components\\auth\\Register.js",[],"X:\\DevConnector\\client\\src\\components\\layout\\Landing.js",[],"X:\\DevConnector\\client\\src\\components\\layout\\Navbar.js",[],"X:\\DevConnector\\client\\src\\components\\auth\\Login.js",[],"X:\\DevConnector\\client\\src\\reducers\\index.js",[],"X:\\DevConnector\\client\\src\\reducers\\alert.js",["127"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}","X:\\DevConnector\\client\\src\\actions\\types.js",[],"X:\\DevConnector\\client\\src\\actions\\alert.js",[],"X:\\DevConnector\\client\\src\\components\\layout\\Alert.js",[],"X:\\DevConnector\\client\\src\\reducers\\auth.js",["128"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","X:\\DevConnector\\client\\src\\actions\\auth.js",[],"X:\\DevConnector\\client\\src\\utils\\setAuthToken.js",[],"X:\\DevConnector\\client\\src\\components\\dashboard\\Dashboard.js",[],"X:\\DevConnector\\client\\src\\components\\routing\\PrivateRoute.js",[],"X:\\DevConnector\\client\\src\\reducers\\profile.js",["129"],"X:\\DevConnector\\client\\src\\actions\\profile.js",["130"],"X:\\DevConnector\\client\\src\\components\\layout\\Spinner.js",["131"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={{ width: '50px', margin: 'auto', display: 'block' }}\r\n      alt='Loading...'\r\n    />\r\n  </Fragment>\r\n);","X:\\DevConnector\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"X:\\DevConnector\\client\\src\\components\\dashboard\\DashboardActions.js",[],"X:\\DevConnector\\client\\src\\components\\profile-forms\\EditProfile.js",["132"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({ profile: { profile, loading }, createProfile, getCurrentProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: ''\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n      githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram\r\n    });\r\n  }, [loading]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData;\r\n\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">\r\n        Create Your Profile\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\"\r\n          >Give us an idea of where you are at in your career</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)} />\r\n          <small className=\"form-text\"\r\n          >Could be your own company or one you work for</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} />\r\n          <small className=\"form-text\"\r\n          >Could be your own or a company website</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\r\n          <small className=\"form-text\"\r\n          >City & state suggested (eg. Boston, MA)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\r\n          <small className=\"form-text\"\r\n          >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername} onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\"\r\n          >If you want your latest repos and a Github link, include your\r\n            username</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)} ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && <Fragment>\r\n          <div className=\"form-group social-input\">\r\n            <i className=\"fab fa-twitter fa-2x\"></i>\r\n            <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)} />\r\n          </div>\r\n\r\n          <div className=\"form-group social-input\">\r\n            <i className=\"fab fa-facebook fa-2x\"></i>\r\n            <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)} />\r\n          </div>\r\n\r\n          <div className=\"form-group social-input\">\r\n            <i className=\"fab fa-youtube fa-2x\"></i>\r\n            <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)} />\r\n          </div>\r\n\r\n          <div className=\"form-group social-input\">\r\n            <i className=\"fab fa-linkedin fa-2x\"></i>\r\n            <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)} />\r\n          </div>\r\n\r\n          <div className=\"form-group social-input\">\r\n            <i className=\"fab fa-instagram fa-2x\"></i>\r\n            <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} />\r\n          </div>\r\n        </Fragment>}\r\n\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditProfile));\r\n","X:\\DevConnector\\client\\src\\components\\profile-forms\\AddExperience.js",["133","134"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: ''\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 class=\"large text-primary\">\r\n        Add An Experience\r\n      </h1>\r\n      <p class=\"lead\">\r\n        <i class=\"fas fa-code-branch\"></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form class=\"form\" onSubmit={e => {\r\n        e.preventDefault();\r\n        addExperience(formData, history);\r\n      }}>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" value={title} onChange={e => onChange(e)} required />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Company\" name=\"company\" value={company} onChange={e => onChange(e)} required />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)} />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\r\n            setFormData({ ...formData, current: !current });\r\n            toggleDisabled(!toDateDisabled);\r\n          }} />{' '}Current Job</p>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''} />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Job Description\"\r\n            value={description} onChange={e => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" class=\"btn btn-primary my-1\" />\r\n        <a class=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addExperience })(AddExperience);\r\n","X:\\DevConnector\\client\\src\\components\\profile-forms\\AddEducation.js",["135","136"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: ''\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { school, degree, fieldofstudy, from, to, current, description } = formData;\r\n\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 class=\"large text-primary\">\r\n        Add Education\r\n      </h1>\r\n      <p class=\"lead\">\r\n        <i class=\"fas fa-code-branch\"></i> Add any school or bootcamp that you have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form class=\"form\" onSubmit={e => {\r\n        e.preventDefault();\r\n        addEducation(formData, history);\r\n      }}>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* School or Bootcamp\" name=\"school\" value={school} onChange={e => onChange(e)} required />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Degree or Certificate\" name=\"degree\" value={degree} onChange={e => onChange(e)} required />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Field of study\" name=\"fieldofstudy\" value={fieldofstudy} onChange={e => onChange(e)} />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)} />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\r\n            setFormData({ ...formData, current: !current });\r\n            toggleDisabled(!toDateDisabled);\r\n          }} />{' '}Pursuing</p>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''} />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Program Description\"\r\n            value={description} onChange={e => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" class=\"btn btn-primary my-1\" />\r\n        <a class=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addEducation })(AddEducation);\r\n","X:\\DevConnector\\client\\src\\components\\dashboard\\Experience.js",[],"X:\\DevConnector\\client\\src\\components\\dashboard\\Education.js",[],"X:\\DevConnector\\client\\src\\components\\profiles\\Profiles.js",["137"],"X:\\DevConnector\\client\\src\\components\\profiles\\ProfileItem.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":6,"column":1,"nodeType":"144","endLine":17,"endColumn":2},{"ruleId":"142","severity":1,"message":"143","line":19,"column":1,"nodeType":"144","endLine":55,"endColumn":2},{"ruleId":"142","severity":1,"message":"143","line":18,"column":1,"nodeType":"144","endLine":58,"endColumn":2},{"ruleId":"145","severity":1,"message":"146","line":234,"column":13,"nodeType":"147","messageId":"148","endLine":234,"endColumn":16},{"ruleId":"142","severity":1,"message":"149","line":4,"column":1,"nodeType":"144","endLine":12,"endColumn":3},{"ruleId":"150","severity":1,"message":"151","line":42,"column":6,"nodeType":"152","endLine":42,"endColumn":15,"suggestions":"153"},{"ruleId":"145","severity":1,"message":"154","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":14},{"ruleId":"145","severity":1,"message":"155","line":2,"column":16,"nodeType":"147","messageId":"148","endLine":2,"endColumn":26},{"ruleId":"145","severity":1,"message":"154","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":14},{"ruleId":"145","severity":1,"message":"155","line":2,"column":16,"nodeType":"147","messageId":"148","endLine":2,"endColumn":26},{"ruleId":"150","severity":1,"message":"156","line":11,"column":6,"nodeType":"152","endLine":11,"endColumn":8,"suggestions":"157"},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["160"],"'Link' is defined but never used.","'withRouter' is defined but never used.","React Hook useEffect has a missing dependency: 'getProfiles'. Either include it or remove the dependency array. If 'getProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["161"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"166","text":"167"},"Update the dependencies array to be: [getProfiles]",{"range":"168","text":"169"},[1675,1684],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",[389,391],"[getProfiles]"]